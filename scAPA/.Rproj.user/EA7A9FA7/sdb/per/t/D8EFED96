{
    "collab_server" : "",
    "contents" : "int <- fread(\"/specific/netapp5_2/elkon/eldadshulman/datasets/Eldad/APA/GTF/M_noexons_introns_hg19_gencode.bed\",\n             data.table = F)\n\ntrans_gene <- fread(\"/specific/netapp5_2/elkon/eldadshulman/datasets/Eldad/APA/GTF/hg19_gene_transcript.txt\",\n                    data.table = F, header = F)\n\ntrans_gene$V1 <- gsub(pattern = \"_\\\\d.*$\", replacement = \"\", x = trans_gene$V1)\ntrans_gene$V2 <- gsub(pattern = \"_\\\\d.*$\", replacement = \"\", x = trans_gene$V2)\nint$V4 <- gsub(pattern = \"_\\\\d.*$\", replacement = \"\", x = int$V4)\nint <- merge(int, trans_gene, by.x = \"V4\", by.y = \"V2\")\nint.bed <- int[,c(2,3,4,7,5,6)]\ncolnames(int.bed) <- paste0(\"V\", 1:6)\nint.bed <- dplyr::group_by(int.bed, V4)\n#For peak index: utrs on the plus strand need descending order, minus ascending\n#For peak index: utrs on the plus strand need descending order, minus ascending\nint.bed <- dplyr::mutate(int.bed,desire = ifelse(V6 == \"+\",\n                                                 dplyr::dense_rank(x = V3),\n                                                 dplyr::dense_rank(dplyr::desc(x = V3))))\n#this is a column for changing the gene name\nint.bed$V4 <- paste0(as.character(int.bed$V4), \"_Int_\", int.bed$desire)\nint.bed <- int.bed[,-7]\nint.bed$V1 <- ifelse(int.bed$V2 == \"chrM\", \"MT\", gsub(pattern = \"chr\",\n                                                      replacement = \"\", x = int.bed$V1))\nthreeprimeUTRs_hg19_v25_lift37.bed <- readRDS(\"/home/elkon/eldadshulman/rpackeges/scAPA/data/hg19.UTRs.bed.RDS\")\ncolnames(threeprimeUTRs_hg19_v25_lift37.bed ) <- paste0(\"V\", 1:6)\n#int.bed <- rbind.data.frame(int.bed, threeprimeUTRs_hg19_v25_lift37.bed )\nint.bed <- as.data.frame(int.bed)\nwrite.bed(.x = int.bed, f = \"/home/elkon/eldadshulman/scAPAscript/data/hg19_intron.bed\")\n\n# mm10 --------------------------------------------------------------------\n\nint <- fread(\"/specific/netapp5_2/elkon/eldadshulman/datasets/Eldad/APA/GTF/M_introons_genecode.bed\",\n             data.table = F)\ntrans_gene <- fread(\"/specific/netapp5_2/elkon/eldadshulman/datasets/Eldad/APA/GTF/Mm10_gene_transcript.txt\",\n                    data.table = F, header = F)\nint$V4 <- gsub(pattern = \"_.*$\", replacement = \"\", x = int$V4)\nint <- merge(int, trans_gene, by.x = \"V4\", by.y = \"V2\")\nint.bed <- int[,c(2,3,4,7,5,6)]\ncolnames(int.bed) <- paste0(\"V\", 1:6)\nint.bed <- dplyr::group_by(int.bed, V4)\n#For peak index: utrs on the plus strand need descending order, minus ascending\n#For peak index: utrs on the plus strand need descending order, minus ascending\nint.bed <- dplyr::mutate(int.bed,desire = ifelse(V6 == \"+\",\n                                                 dplyr::dense_rank(x = V3),\n                                                 dplyr::dense_rank(dplyr::desc(x = V3))))\n#this is a column for changing the gene name\nint.bed$V4 <- paste0(as.character(int.bed$V4), \"_Int_\", int.bed$desire)\nint.bed <- int.bed[,-7]\nint.bed$V1 <- ifelse(int.bed$V2 == \"chrM\", \"MT\", gsub(pattern = \"chr\",\n                                                      replacement = \"\", x = int.bed$V1))\ndata(\"mm10.UTRs.bed\")\nthreeprimeUTRs_hg19_v25_lift37.bed <- mm10.UTRs.bed\n\ncolnames(threeprimeUTRs_hg19_v25_lift37.bed ) <- paste0(\"V\", 1:6)\n#int.bed <- rbind.data.frame(int.bed, threeprimeUTRs_hg19_v25_lift37.bed )\nint.bed <- as.data.frame(int.bed)\nwrite.bed(.x = int.bed, f = \"/home/elkon/eldadshulman/scAPAscript/data/mm10_intron.bed\")\n\n\n\n",
    "created" : 1562827425189.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "4125051901",
    "id" : "D8EFED96",
    "lastKnownWriteTime" : 1562828332,
    "last_content_update" : 1562828332254,
    "path" : "/specific/netapp5_2/elkon/eldadshulman/scAPAscript/intronEdditing.r",
    "project_path" : null,
    "properties" : {
    },
    "relative_order" : 8,
    "source_on_save" : false,
    "source_window" : "",
    "type" : "r_source"
}