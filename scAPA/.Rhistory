saf <- saf[-3206,]
pas <-  read_down.seq(saf = saf,char.length.path = char.length ,fasta.path = fasta ,chr.modify = T ,l = 150, r = 150)
has.pas <- find_internal_prim_seq(x = r, int.priming.seq = "AATAAA",
left = 150,
right = 150)
.down.seq.data <- split(x = as.character(pas[,6]),
f = pas[,4])
#int.priming.seq.neg <- gsub(x = int.priming.seq, pattern = "A", replacement = "T")
#int.priming.seq <- paste0(int.priming.seq, "|", int.priming.seq.neg)
list_pos <- function(x, .int.priming.seq = int.priming.seq){
gregexpr(pattern  = "AATAAA", text = x)
}
pos <- lapply(FUN = list_pos, X = .down.seq.data)
pos <- lapply(X = pos, FUN = unlist)
pos <- lapply(pos, FUN = function(x){x[x > 0]})
pos <- unlist(pos)
length(unique(names(pos)))
head(pos)
summary(pos)
head(pas)
dim(pas)
dim(saf)
r
saf <- r@metadata
dim(saf)
dim(r@metadata)
dim(r@down.seq)
length(r@utrs.clus.counts)
source('/specific/netapp5_2/elkon/eldadshulman/scAPA/R/APAreasults.R')
r <- set_scAPAreasults(a.int, int = T, cpm = 9)
has.Aseq <- find_internal_prim_seq(x = r, int.priming.seq = "AAAAAAAA",
left = 10,
right = 140)
keep.int.pr <- as.vector(which(has.Aseq$has_seq == F))
r <- r[keep.int.pr]
saf <- r@metadata
dim(saf)
2
r
saf <- saf[,c(4,1,2,3,6)]
saf$Start <- as.numeric(saf$Start)
saf$End <- as.numeric(saf$End)
saf <- saf[complete.cases(saf),]
pas <-  read_down.seq(saf = saf,char.length.path = char.length ,fasta.path = fasta ,chr.modify = T ,l = 150, r = 150)
.down.seq.data <- split(x = as.character(pas[,6]),
f = pas[,4])
list_pos <- function(x, .int.priming.seq = int.priming.seq){
gregexpr(pattern  = "AATAAA", text = x)
}
pos <- lapply(FUN = list_pos, X = .down.seq.data)
pos <- lapply(X = pos, FUN = unlist)
pos <- lapply(pos, FUN = function(x){x[x > 0]})
pos <- unlist(pos)
summary(pos)
length(pos)
dim(saf)
pdf("pos.pdf")
plot(density(pos))
dev.off()
pos <- pos -150
pdf("pos.pdf")
plot(density(pos))
dev.off()
pdf("pos.pdf")
plot(hist(pos))
dev.off()
bed <- r@metadata
dim(bed)
bed$Chr <- ifelse(bed$Chr == "MT", "M", paste0("chr", bed$Chr))
colnames(bed) <- paste0("V", 1:6)
bed$V3 <- as.numeric(bed$V3)
bed$V2 <- as.numeric(bed$V2)
bed <- peakedge(bed)
bed <- bed[complete.cases(bed),]
bed <- merge(bed, a.int@clus.counts, by.x = "V4", by.y = "Peak_ID")
bed$sum <-  bed$Alveolar + bed$Cancer
bed <- bed[,c(2,3,4,1,9,6)]
write.bed(.x = bed, f = "/home/elkon/eldadshulman/datasets/Eldad/APA/lung_carcinom/mclust/motifs/introns/tries/Introns.bed")
head(bed)
setwd("/home/elkon/eldadshulman/datasets/Eldad/APA/test/mclust_downsample/")
r <- set_scAPAreasults(a.int, int = T, cpm = 9)
has.Aseq <- find_internal_prim_seq(x = r, int.priming.seq = "AAAAAAAA|TTTTTTTT",
left = 10,
right = 140)
keep.int.pr <- as.vector(which(has.Aseq$has_seq == F))
r <- r[keep.int.pr]
dim(r)
r
list_pos <- function(x, .int.priming.seq = int.priming.seq){
gregexpr(pattern  = "AAAAAA", text = x)
}
pos <- lapply(FUN = list_pos, X = .down.seq.data)
pos <- lapply(X = pos, FUN = unlist)
pos <- lapply(pos, FUN = function(x){x[x > 0]})
pos <- unlist(pos)
pos <- pos -150
summary(pos)
pdf("pos.pdf")
plot(hist(pos))
dev.off()
r <- set_scAPAreasults(a.int, int = T, cpm = 9)
has.Aseq <- find_internal_prim_seq(x = r, int.priming.seq = "AAAAAA",
left = 0,
right = 130)
keep.int.pr <- as.vector(which(has.Aseq$has_seq == F))
r <- r[keep.int.pr]
bed <- r@metadata
dim(bed)
bed$Chr <- ifelse(bed$Chr == "MT", "M", paste0("chr", bed$Chr))
colnames(bed) <- paste0("V", 1:6)
bed$V3 <- as.numeric(bed$V3)
bed$V2 <- as.numeric(bed$V2)
bed <- peakedge(bed)
bed <- bed[complete.cases(bed),]
bed <- merge(bed, a.int@clus.counts, by.x = "V4", by.y = "Peak_ID")
bed$sum <-  bed$Alveolar + bed$Cancer
bed <- bed[,c(2,3,4,1,9,6)]
r <- set_scAPAreasults(a.int, int = T, cpm = 9)
bed <- r@metadata
bed$Chr <- ifelse(bed$Chr == "MT", "M", paste0("chr", bed$Chr))
colnames(bed) <- paste0("V", 1:6)
bed$V3 <- as.numeric(bed$V3)
bed$V2 <- as.numeric(bed$V2)
bed <- peakedge(bed)
bed <- bed[complete.cases(bed),]
bed <- merge(bed, a.int@clus.counts, by.x = "V4", by.y = "Peak_ID")
bed$sum <-  bed$Alveolar + bed$Cancer
bed <- bed[,c(2,3,4,1,9,6)]
bed <- bed[complete.cases(bed),]
write.bed(.x = bed, f = "/home/elkon/eldadshulman/datasets/Eldad/APA/lung_carcinom/mclust/motifs/introns/Introns.bed")
dim(bed)
setwd("/home/elkon/eldadshulman/datasets/Eldad/APA/test/mclust_downsample/")
table_brain <- data.frame(num = 2:9, peak = 2:9, apa = 2:9)
peaks <- list.files(pattern = "newnewpeaks_0[.]\\d$")
head(peaks)
frac <- paste0("bam_0.", 2:9,"$")
rdsfiles <- paste0("a", 2:9,".RDS")
org = "Mm"
bedtools.path = ""
samtools.path = ""
i = 2
bam.cluster.files <- list.files(pattern = frac[i])
bam.cluster <- paste(bam.cluster.files, collapse = " ")
bam.cluster
frac
write.bed(.x = bed, f = "/home/elkon/eldadshulman/datasets/Eldad/APA/lung_carcinom/mclust/motifs/introns/Introns.bed")
which R
which R_system_version()
which(r)
version
r
R
head(a.int)
tail(a.int)
tail(a.int@clus.counts)
head(a.int@clus.counts)
a.int <- a.int[rowSums(a.int@clus.counts[,-1]) !=0,]
r <- set_scAPAreasults(a.int, int = T, cpm = 9)
r
dim(a.int)
head(r@utrs.clus.counts)
head(r@metadata)
head(r@down.seq)
has.Aseq <- find_internal_prim_seq(x = r, int.priming.seq = "AAAAAA",
left = 1,
right = 150)
keep.int.pr <- as.vector(which(has.Aseq$has_seq == F))
r <- r[keep.int.pr]
r
r <- set_scAPAreasults(a.int, int = T, cpm = 9)
has.Aseq <- find_internal_prim_seq(x = r, int.priming.seq = "AAAAAAAA",
left = 1,
right = 150)
keep.int.pr <- as.vector(which(has.Aseq$has_seq == F))
r <- r[keep.int.pr]
r
r <- set_scAPAreasults(a.int, int = T, cpm = 9)
has.Aseq <- find_internal_prim_seq(x = r, int.priming.seq = "AAAAAAAA",
left = 10,
right = 140)
keep.int.pr <- as.vector(which(has.Aseq$has_seq == F))
r <- r[keep.int.pr]
r
head(r@utrs.clus.counts)
head(keep.int.pr)
head(has.Aseq)
head(r@metadata)
r
r <- set_scAPAreasults(a.int, int = T, cpm = 9)
head(r@metadata)
head(has.Aseq)
r
keep.int.pr <- as.vector(which(has.Aseq$has_seq == F))
length(keep.int.pr)
bed <- r@metadata
bed$Chr <- ifelse(bed$Chr == "MT", "M", paste0("chr", bed$Chr))
colnames(bed) <- paste0("V", 1:6)
bed$V3 <- as.numeric(bed$V3)
bed$V2 <- as.numeric(bed$V2)
bed <- peakedge(bed)
bed <- bed[complete.cases(bed),]
bed <- merge(bed, a.int@clus.counts, by.x = "V4", by.y = "Peak_ID")
bed$sum <-  bed$Alveolar + bed$Cancer
bed <- bed[,c(2,3,4,1,9,6)]
bed <- bed[complete.cases(bed),]
write.bed(.x = bed, f = "/home/elkon/eldadshulman/datasets/Eldad/APA/lung_carcinom/mclust/motifs/introns/try/Introns.bed")
library(data.table)
library(dplyr)
library(ggplot2)
org = "Hs"
#this script is for investgating known vs unknown peaks
source('/specific/netapp5_2/elkon/eldadshulman/datasets/Eldad/APA/functions/new_function_forsusegematrix.r')
#/home/elkon/eldadshulman/datasets/Eldad/APA/lung_carcinom/mclust/motifs/UTR/
path_motif = "/home/elkon/eldadshulman/datasets/Eldad/APA/lung_carcinom/mclust/motifs/introns/try/"
if(org == "Hs") char.length.path <-  "/home/elkon/Bowtie2_indexes/Hs/hg19/hg19_CHR_LENs.txt"
if(org == "Mm") char.length.path <-  "/home/elkon/Bowtie2_indexes/Mm/mm10/mm10_chr_len.txt"
#motif_things <- function(path_motif)
setwd(path_motif)
UTRusege.edge <- fread("Introns.bed", showProgress = T, data.table = F)
#
#
#
# # #
# # #
# # #
# # #
#  system("bedtools slop -s -l 1 -r 150 -i Introns.bed -g /home/elkon/Bowtie2_indexes/Hs/hg19/hg19_CHR_LENs.txt > E_1_150_utrmotifs.bed",wait = T)
# #
#  first.Dream.command <- paste0("/home/elkon/eldadshulman/bashscript/pipeline_",
#                               "DREME_analysis.sh E_1_150_utrmotifs.bed",
#                                " allutr_motifs_1_150 1 6 6 ", org, " 0 1 &> ",
#                                "dream_allutr_1150.out")
#    system(command = first.Dream.command, wait = T)
#
# seq = system(command = 'cat DREME_norc_K_6_allutr_motifs_1_150/dreme.txt | grep "MOTIF" | head -1 | cut -d" " -f2', intern = T, wait = T)
#
#   fimo.command <- paste0("/home/elkon/eldadshulman/bashscript/",
#                          "FIMO_search_for_DREME_motif_hits.sh ",
#                          "DREME_norc_K_6_allutr_motifs_1_150/dreme.txt ",
#                          seq, " allutr_motifs_1_150_pos.fa 1e-2 eightA_all1150",
#                         " 1 E_1_150_utrmotifs.bed &> outfimo_jagain")
#
#  system(command = fimo.command, wait = T)
#
#
# fimo.path_8 = "eightA_all1150_fimo/"
#
# fimo_hist(PATH = fimo.path_8, sequance = "AAAAAA", left = 1, right = 150, hist_name = "eightA_sample5_")
#
# fimo_count_hist(PATH = fimo.path_8, sequance = "AAAAAA", left = 1, right = 150, y= UTRusege.edge, hist_name = "eightA_sample5_")
#
# genes.with.eightA <- fimo_genenames(PATH = fimo.path_8, sequance = "AAAAAA", left = 1 , right = 150, right_border = 140, left_border = 10)
#
# UTRusege.edge.filtered  <- UTRusege.edge[!(UTRusege.edge$V4 %in% genes.with.eightA),]
#
#
#
# write.table(file = "filtered_UTR.bed", x = UTRusege.edge.filtered, sep = "\t", quote = F, col.names = F, row.names = F)
system(paste0("bedtools slop -s -l 30 -r 160 -i Introns.bed -g ",char.length.path, " > E_30_160_filtered_UTR.bed"),
wait = T)
dream.command <- paste0("/home/elkon/eldadshulman/bashscript/pipeline_DREME_analysis.sh ",
"E_30_160_filtered_UTR.bed filteredmotif160 1 5 7 ", org,
" 0 1 &> ",
"dream_allutr_1150.out")
dream.command
a.int <- readRDS("a.int.RDS")
setwd("/home/elkon/eldadshulman/datasets/Eldad/APA/lung_carcinom/mclust/int")
a.int <- readRDS("a.int.RDS")
a.int <- a.int[rowSums(a.int@clus.counts[,-1]) !=0,]
source('/specific/netapp5_2/elkon/eldadshulman/scAPA/R/APAreasults.R')
a.int <- readRDS("a.int.RDS")
r <- set_scAPAreasults(a.int, int = T, cpm = 10)
r
has.Aseq <- find_internal_prim_seq(x = r, int.priming.seq = "AAAAAA",
left = 1,
right = 150)
keep.int.pr <- as.vector(which(has.Aseq$has_seq == F))
r <- r[keep.int.pr]
r
head(r@utrs.clus.counts)
bed <- r@metadata
bed$Chr <- ifelse(bed$Chr == "MT", "M", paste0("chr", bed$Chr))
colnames(bed) <- paste0("V", 1:6)
bed$V3 <- as.numeric(bed$V3)
bed$V2 <- as.numeric(bed$V2)
bed <- peakedge(bed)
bed <- bed[complete.cases(bed),]
bed <- merge(bed, a.int@clus.counts, by.x = "V4", by.y = "Peak_ID")
bed$sum <-  bed$Alveolar + bed$Cancer
bed <- bed[,c(2,3,4,1,9,6)]
bed <- bed[complete.cases(bed),]
write.bed(.x = bed, f = "/home/elkon/eldadshulman/datasets/Eldad/APA/lung_carcinom/mclust/motifs/introns/try/Introns.bed")
system(paste0("bedtools slop -s -l 30 -r 160 -i Introns.bed -g ",char.length.path, " > E_30_160_filtered_UTR.bed"),
wait = T)
getwd()
path_motif = "/home/elkon/eldadshulman/datasets/Eldad/APA/lung_carcinom/mclust/motifs/introns/try/"
library(data.table)
setwd(path_motif)
system(paste0("bedtools slop -s -l 30 -r 160 -i Introns.bed -g ",char.length.path, " > E_30_160_filtered_UTR.bed"),
wait = T)
dream.command <- paste0("/home/elkon/eldadshulman/bashscript/pipeline_DREME_analysis.sh ",
"E_30_160_filtered_UTR.bed filteredmotif160 1 5 7 ", org,
" 0 1 &> ",
"dream_allutr_1150.out")
setwd(path_motif)
seq = system(command = 'cat DREME_norc_K_6_filteredmotif/dreme.txt | grep "MOTIF" | head -1 | cut -d" " -f2', intern = T, wait = T)
getwd()
seq = system(command = 'cat DREME_norc_K_6_filteredmotif160/dreme.txt | grep "MOTIF" | head -1 | cut -d" " -f2', intern = T, wait = T)
seq
fimo.command <- paste0("/home/elkon/eldadshulman/bashscript/",
"FIMO_search_for_DREME_motif_hits.sh ",
"DREME_norc_K_6_filteredmotif/dreme.txt ",
seq, " filteredmotif_pos.fa 1e-2 PAS",
" 1 E_30_160_filtered_UTR.bed &> outfimo_jagain")
fimo.command
path120 <- "PAS_fimo/"
fimo_hist(PATH = path120, sequance = c("AATAAA", "ATTAAA"), left = 30, right = 160, hist_name = "PAS2_lung_pt3")
fimo_count_hist(PATH = path120  , sequance = "AATAAA", left = 30, right = 160, y= UTRusege.edge.filtered, hist_name = "PAS_count_lung_pt5")
system(paste0("bedtools slop -s -l 20 -r 150 -i Introns.bed -g ",char.length.path, " > E_30_150_filtered_UTR.bed"),
wait = T)
system(paste0("bedtools slop -s -l 20 -r 150 -i Introns.bed -g ",char.length.path, " > E_20_150_filtered_UTR.bed"),
wait = T)
dream.command <- paste0("/home/elkon/eldadshulman/bashscript/pipeline_DREME_analysis.sh ",
"E_20_150_filtered_UTR.bed filteredmotif160 1 5 7 ", org,
" 0 1 &> ",
"dream_allutr_1150.out")
system(command = dream.command, wait = T)
system(paste0("bedtools slop -s -l 30 -r 120 -i Introns.bed -g ",char.length.path, " > E_30_120_filtered_UTR.bed"),
wait = T)
dream.command <- paste0("/home/elkon/eldadshulman/bashscript/pipeline_DREME_analysis.sh ",
"E_30_120_filtered_UTR.bed filteredmotif30120 1 6 6 ", org,
" 0 1 &> ",
"dream_allutr_1150.out")
system(command = dream.command, wait = T)
dream.command <- paste0("/home/elkon/eldadshulman/bashscript/pipeline_DREME_analysis.sh ",
"E_30_120_filtered_UTR.bed filteredmotif30120_mask 1 6 6 ", org,
" 1 1 &> ",
"dream_allutr_1150.out")
system(command = dream.command, wait = T)
r <- set_scAPAreasults(a.int, int = T, cpm = 10)
has.Aseq <- find_internal_prim_seq(x = r, int.priming.seq = "AAAAAA|TTTTTT",
left = 1,
right = 150)
keep.int.pr <- as.vector(which(has.Aseq$has_seq == F))
r <- r[keep.int.pr]
bed <- r@metadata
bed$Chr <- ifelse(bed$Chr == "MT", "M", paste0("chr", bed$Chr))
colnames(bed) <- paste0("V", 1:6)
bed$V3 <- as.numeric(bed$V3)
bed$V2 <- as.numeric(bed$V2)
bed <- peakedge(bed)
bed <- bed[complete.cases(bed),]
bed <- merge(bed, a.int@clus.counts, by.x = "V4", by.y = "Peak_ID")
bed$sum <-  bed$Alveolar + bed$Cancer
bed <- bed[,c(2,3,4,1,9,6)]
bed <- bed[complete.cases(bed),]
write.bed(.x = bed, f = "/home/elkon/eldadshulman/datasets/Eldad/APA/lung_carcinom/mclust/motifs/introns/try/Introns.bed")
# backto
system(paste0("bedtools slop -s -l 30 -r 120 -i Introns.bed -g ",char.length.path, " > E_30_120_filtered_UTR.bed"),
wait = T)
dream.command <- paste0("/home/elkon/eldadshulman/bashscript/pipeline_DREME_analysis.sh ",
"E_30_120_filtered_UTR.bed filteredmotif30120_mask 1 6 6 ", org,
" 1 1 &> ",
"dream_allutr_1150.out")
system(command = dream.command, wait = T)
r
r <- set_scAPAreasults(a.int, int = T, cpm = 10)
r
head(r@utrs.clus.counts)
r <- set_scAPAreasults(a.int, int = T, cpm = 20)
r
has.Aseq <- find_internal_prim_seq(x = r, int.priming.seq = "AAAAAA|TTTTTT",
left = 1,
right = 150)
keep.int.pr <- as.vector(which(has.Aseq$has_seq == F))
r <- r[keep.int.pr]
bed <- r@metadata
bed$Chr <- ifelse(bed$Chr == "MT", "M", paste0("chr", bed$Chr))
colnames(bed) <- paste0("V", 1:6)
bed$V3 <- as.numeric(bed$V3)
bed$V2 <- as.numeric(bed$V2)
bed <- peakedge(bed)
bed <- bed[complete.cases(bed),]
bed <- merge(bed, a.int@clus.counts, by.x = "V4", by.y = "Peak_ID")
bed$sum <-  bed$Alveolar + bed$Cancer
bed <- bed[,c(2,3,4,1,9,6)]
bed <- bed[complete.cases(bed),]
write.bed(.x = bed, f = "/home/elkon/eldadshulman/datasets/Eldad/APA/lung_carcinom/mclust/motifs/introns/try/Introns.bed")
system(paste0("bedtools slop -s -l 30 -r 120 -i Introns.bed -g ",char.length.path, " > E_30_120_filtered_UTR.bed"),
wait = T)
dream.command <- paste0("/home/elkon/eldadshulman/bashscript/pipeline_DREME_analysis.sh ",
"E_30_120_filtered_UTR.bed filteredmotif30120_mask 1 6 6 ", org,
" 1 1 &> ",
"dream_allutr_1150.out")
system(command = dream.command, wait = T)
r <- set_scAPAreasults(a.int, int = T, cpm = 20)
has.Aseq <- find_internal_prim_seq(x = r, int.priming.seq = "AAAAAA",
left = 1,
right = 200)
keep.int.pr <- as.vector(which(has.Aseq$has_seq == F))
r <- r[keep.int.pr]
bed <- r@metadata
bed$Chr <- ifelse(bed$Chr == "MT", "M", paste0("chr", bed$Chr))
colnames(bed) <- paste0("V", 1:6)
bed$V3 <- as.numeric(bed$V3)
bed$V2 <- as.numeric(bed$V2)
bed <- peakedge(bed)
bed <- bed[complete.cases(bed),]
bed <- merge(bed, a.int@clus.counts, by.x = "V4", by.y = "Peak_ID")
bed$sum <-  bed$Alveolar + bed$Cancer
bed <- bed[,c(2,3,4,1,9,6)]
bed <- bed[complete.cases(bed),]
write.bed(.x = bed, f = "/home/elkon/eldadshulman/datasets/Eldad/APA/lung_carcinom/mclust/motifs/introns/try/Introns.bed")
r
system(paste0("bedtools slop -s -l 30 -r 120 -i Introns.bed -g ",char.length.path, " > E_30_120_filtered_UTR.bed"),
wait = T)
dream.command <- paste0("/home/elkon/eldadshulman/bashscript/pipeline_DREME_analysis.sh ",
"E_30_120_filtered_UTR.bed filteredmotif30120_mask 1 6 6 ", org,
" 1 1 &> ",
"dream_allutr_1150.out")
system(command = dream.command, wait = T)
r <- test_APA(r)
r <- calc_p_pui_mat(r)
sig <- r[r@pvalues$all[,2] < 0.05,]
sum(sig@ppui.clus[,1] < sig@ppui.clus[,2], na.rm = T)
sum(sig@ppui.clus[,1] > sig@ppui.clus[,2], na.rm = T)
r@metadata
source('/specific/netapp5_2/elkon/eldadshulman/scAPA/R/GTF_create.R')
source('/specific/netapp5_2/elkon/eldadshulman/scAPA/R/GTF_create.R')
setwd("/home/elkon/eldadshulman/datasets/Eldad/APA/lung_carcinom/mclust/int")
bedtools.path = ""
library(Rsubread)
merge_peaks(bedtools.path = bedtools.path,
peaks.file = "../../sample_3_5/peaks", path = "./")
int.peaks.bed <- intersect_peaks(org = "Hs", bed.name = "./merge.peakfile.bed",
path = "", bedtools.path = bedtools.path,
introns = T)
int.peaks.bed  <- as.data.frame(int.peaks.bed)
int.saf <- int.peaks.bed[,c(4,1,2,3,6)]
colnames(int.saf) <- c("GeneID", "Chr",	"Start","End","Strand")
# Read Counts -------------------------------------------------------------
bam.cluster.files <- c("/home/elkon/eldadshulman/aparevision/ChangePoint/LungL/dedup.sample3_Alveolar_allsamples.bam",
"/home/elkon/eldadshulman/aparevision/ChangePoint/LungL/dedup.sample3_tumor.bam")
counts_int <- featureCounts(files = bam.cluster.files ,isGTFAnnotationFile = F,
annot.ext = int.saf, largestOverlap = T, nthreads = 30)
co_int <- cbind.data.frame(rownames(counts_int$counts), counts_int$counts)
colnames(co_int) <- c("Peak_ID", "Alveolar", "Cancer")
meta_int <- counts_int$annotation
meta_int <- meta_int[,c(2,3,4,1,6,5)]
fasta = "/specific/netapp5_2/elkon/Bowtie2_indexes/Hs/hg19/hg19.fa"
char.length = "/home/elkon/Bowtie2_indexes/Hs/hg19/hg19_CHR_LENs.txt"
metadata_int <- read_down.seq(saf = int.saf,
char.length.path = char.length,
fasta.path = fasta,
chr.modify = T)
aseq_int <- metadata_int[,c(4,6)]
a.int <- set_scAPAList(.clus.counts = co_int, .row.Data = meta_int, .down.seq = aseq_int)
a.int <- a.int[rowSums(a.int@clus.counts[,-1]) !=0,]
saveRDS(object = a.int , file = "a.int.RDS")
a.int <- readRDS("a.int.RDS")
r <- set_scAPAreasults(a.int, int = T, cpm = 20)
r
has.Aseq <- find_internal_prim_seq(x = r, int.priming.seq = "AAAAAA",
left = 1,
right = 200)
keep.int.pr <- as.vector(which(has.Aseq$has_seq == F))
r <- r[keep.int.pr]
r
r <- set_scAPAreasults(a.int, int = T, cpm = 20)
has.Aseq <- find_internal_prim_seq(x = r, int.priming.seq = "AAAAAA",
left = 1,
right = 150)
keep.int.pr <- as.vector(which(has.Aseq$has_seq == F))
r <- r[keep.int.pr]
r
bed <- r@metadata
bed$Chr <- ifelse(bed$Chr == "MT", "M", paste0("chr", bed$Chr))
colnames(bed) <- paste0("V", 1:6)
bed$V3 <- as.numeric(bed$V3)
bed$V2 <- as.numeric(bed$V2)
bed <- peakedge(bed)
bed <- bed[complete.cases(bed),]
bed <- merge(bed, a.int@clus.counts, by.x = "V4", by.y = "Peak_ID")
bed$sum <-  bed$Alveolar + bed$Cancer
bed <- bed[,c(2,3,4,1,9,6)]
bed <- bed[complete.cases(bed),]
write.bed(.x = bed, f = "/home/elkon/eldadshulman/datasets/Eldad/APA/lung_carcinom/mclust/motifs/introns/try/Introns.bed")
# backtoanal
system(paste0("bedtools slop -s -l 30 -r 150 -i Introns.bed -g ",char.length.path, " > E_30_150_filtered_UTR.bed"),
wait = T)
dream.command <- paste0("/home/elkon/eldadshulman/bashscript/pipeline_DREME_analysis.sh ",
"E_30_150_filtered_UTR.bed filteredmotif30120_mask 1 6 6 ", org,
" 1 1 &> ",
"dream_allutr_1150.out")
system(command = dream.command, wait = T)
getwd()
setwd("/specific/netapp5_2/elkon/eldadshulman/datasets/Eldad/APA/lung_carcinom/mclust/motifs/introns/try/")
system(paste0("bedtools slop -s -l 30 -r 150 -i Introns.bed -g ",char.length.path, " > E_30_150_filtered_UTR.bed"),
wait = T)
dream.command <- paste0("/home/elkon/eldadshulman/bashscript/pipeline_DREME_analysis.sh ",
"E_30_150_filtered_UTR.bed filteredmotif30120_mask 1 6 6 ", org,
" 1 1 &> ",
"dream_allutr_1150.out")
system(command = dream.command, wait = T)
library(devtools)
.libPaths("/home/elkon/eldadshulman/Rfive/")
library(devtools)
devtools::use_package("dplyr")
use_package("dplyr")
use_package("ggplot2")
use_package("purrr")
use_package("EnvStats")
